[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nostr-tools"
version = "0.1.0"
description = "A comprehensive Python library for Nostr protocol interactions"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Bigbrotr", email = "hello@bigbrotr.com"}
]
maintainers = [
    {name = "Bigbrotr", email = "hello@bigbrotr.com"}
]
keywords = [
    "nostr", "decentralized", "social", "protocol", "websocket", 
    "cryptography", "bitcoin", "schnorr", "secp256k1", "relay"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Communications",
    "Topic :: Security :: Cryptography",
    "Framework :: AsyncIO",
]

dependencies = [
    "bech32==1.2.0",
    "secp256k1==0.14.0", 
    "aiohttp==3.11.18",
    "aiohttp-socks==0.10.1",
    "typing-extensions>=4.0.0; python_version<'3.10'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
security = [
    "bandit[toml]>=1.7.0",
    "safety>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/bigbrotr/nostr-tools"
Documentation = "https://github.com/bigbrotr/nostr-tools#readme"
Repository = "https://github.com/bigbrotr/nostr-tools.git"
"Bug Reports" = "https://github.com/bigbrotr/nostr-tools/issues"
"Source Code" = "https://github.com/bigbrotr/nostr-tools"
Changelog = "https://github.com/bigbrotr/nostr-tools/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["nostr_tools*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
nostr_tools = ["py.typed"]

# Ruff configuration (replaces black, isort, flake8, and more)
[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "PTH",  # flake8-use-pathlib
    "RUF",  # ruff-specific rules
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "B008",   # do not perform function calls in argument defaults
    "PTH123", # use pathlib for open() - not always necessary
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]  # imported but unused
"tests/*" = ["F401", "F811", "S101"]  # asserts are OK in tests
"examples/*" = ["T201"]  # print statements are OK in examples

[tool.ruff.lint.isort]
known-first-party = ["nostr_tools"]
force-sort-within-sections = true
split-on-trailing-comma = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Relaxed for initial release
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "secp256k1.*",
    "bech32.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config", 
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests", 
    "security: marks tests as security-focused tests",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["nostr_tools"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError", 
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if typing.TYPE_CHECKING:",
]
show_missing = true
precision = 2

# Bandit security configuration
[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101", "B601"]